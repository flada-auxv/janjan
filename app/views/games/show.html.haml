%ul.game-info
  %li wall: #{@round.wall.tiles.count}
  %li wind: #{@round.wind}
  %li counter: #{@round.counter}
.game-board
  - 3.times.inject([current_user.seat]) {|seats| seats << seats.last.next }.each.with_index do |seat, i|
    %div{class: "user-field user-field--#{i}"}
      .center-area
        .player-info{data: {position: seat.position}}
          .player-info__point= seat.point
          .player-info__name user #{seat.user.id.first(5)}
        %ul.river
          - seat.river.tiles.order(:updated_at).each do |tile|
            %li.tile{data: {tile: tile.kind}}

      - if seat == current_user.seat
        = form_tag room_actions_path(type: :discard), id: :discard_form do
          %ul.hand
            - seat.hand.tiles.sort_by(&:kind).each do |tile|
              %li
                %label.tile{data: {tile: tile.kind}}
                  - if Action::Discard.new(seat: current_user.seat, round: @round).able?
                    %input{type: :radio, name: :id, value: tile.id}

- if Action::Discard.new(seat: current_user.seat, round: @round).able?
  %button{form: :discard_form} Discard
= button_to_action_if_able user: current_user, room: @game.room, type: :draw
= button_to_action_if_able user: current_user, room: @game.room, type: :self_pick
